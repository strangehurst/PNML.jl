text conventions.rng:28: nonnegativeintegerlabel.content
text conventions.rng:44: positiveintegerlabel.content

simpletext.content: text
annotationstandard.content:  graphics?, toolspecific*

basicobject.content: name?, toolspecific*
netobject.content:   page | place | arc | transition | refTrans | refPlace
node.content:        graphics?
simpletextlabel.content: text, graphics?, toolspecific*

place.content: id, name?, toolspecific*, place.labels, graphics?
arc.content:
transition.content:

place.labels: Type | HLMarking | PTMarking
arc.labels: HLAnnotation | PTArcAnnotation

Operator.content:    subterm*
Declaration.content: ID, name

BuiltInSort = bool | cyclicenumeration | finiteenumeration | finiteintrange | integer | list | string
BuiltInOperator.content = Operator.content = subterm*
BuiltInConstant.content = Operator.content = subterm*

Term:   Variable | Operator
Sort:   BuiltInSort | MultisetSort | ProductSort | UserSort
Number: Natural | Positive | Integer

Type: simpletextlabel.content, structure Sort

==============================================================
find .  -type f  -exec grep -nHP '<element name=' \{\} \; |\
      grep -Fv '.svn/text-base' |\
      awk '{print $3, $1}' | sed -e 's/^name="//' -e 's/">//' | column -t | sort
==============================================================

anyElement		anyElement.rng:21: anyName, ... # recursive?

graphics                pnmlcoremodel.rng:134: in page.content
graphics                pnmlcoremodel.rng:217: in node.content
graphics                pnmlcoremodel.rng:304: in arc.content
graphics                pnmlcoremodel.rng:390: in annotationstandard.content

dimension               pnmlcoremodel.rng:485: x, y positiveDecimal.content
fill                    pnmlcoremodel.rng:513:
font                    pnmlcoremodel.rng:592:
line                    pnmlcoremodel.rng:546:
offset                  pnmlcoremodel.rng:460:
position                pnmlcoremodel.rng:451: x, y decimals

name                    pnmlcoremodel.rng:420: text, graphics?, toolspecific*
text                    pnmlcoremodel.rng:372: text is text
toolspecific            pnmlcoremodel.rng:644: toolname, version, anyElement*

==============================================================

pnml                    pnmlcoremodel.rng:30:	net+
net                     pnmlcoremodel.rng:46:	id, nettype, name?, page+, toolspecific*, declaration*, label*
page                    pnmlcoremodel.rng:125:  id, name?,  toolspecific*, declaration*, label*
place                   pnmlcoremodel.rng:171:	id, name?,  toolspecific*, sorttype?, initalMarking, place.labels
arc                     pnmlcoremodel.rng:285:	id, name?,  toolspecific*, inscription?
transition              pnmlcoremodel.rng:194:	id, name?,  toolspecific*, condition?
referencePlace          pnmlcoremodel.rng:244:  id, IDREF, name?, toolspecific*
referenceTransition     pnmlcoremodel.rng:261:  id, IDREF, name?, toolspecific*


condition               hlcorestructure.rng:115: simpletextlabel.content, structure? Term
declaration             hlcorestructure.rng:65:  simpletextlabel.content, structure? Term
hlinitialMarking        hlcorestructure.rng:98:  simpletextlabel.content, structure? Term
hlinscription           hlcorestructure.rng:131: simpletextlabel.content, structure? Term
type                    hlcorestructure.rng:81:  simpletextlabel.content, structure? Sort

structure               hlcorestructure.rng:102: in hlinitialMarking
structure               hlcorestructure.rng:119: in condition
structure               hlcorestructure.rng:135: in hlinscription
structure               hlcorestructure.rng:69:  in declaration
structure               hlcorestructure.rng:85:  in type

initialMarking          ptnet.pntd:56:
inscription             ptnet.pntd:70:

type                    pt-hlpng.pntd:56:

tokengraphics           pnmlextensions.rng:39:
tokenposition           pnmlextensions.rng:51:

###################################################################################

declarations            terms.rng:24: (namedsort | arbitrarysort| variabledecl | namedoperator)*
variabledecl            terms.rng:62:  ID, name, Sort
namedoperator           terms.rng:130: ID, name, def Term,  parameter*

def                     terms.rng:137: Term
multisetsort            terms.rng:207: Sort
namedsort               terms.rng:117: ID, name, Sort
productsort             terms.rng:217: Sort*

useroperator            terms.rng:332: IDREF, subterm*
parameter               terms.rng:132: variabledecl*
subterm                 terms.rng:242: Term
tuple                   terms.rng:320: subterm*
usersort                terms.rng:230: IDREF of declaration
variable                terms.rng:105: IDREF of declaration

dot                     dots.rng:40: empty
dotconstant             dots.rng:49: empty

empty                   multisets.rng:76:  Sort, subterm*
add                     multisets.rng:48:  subterm*
all                     multisets.rng:66:  Sort, subterm*
cardinality             multisets.rng:105: subterm*
cardinalityof           multisets.rng:114: subterm*
contains                multisets.rng:123: subterm*
numberof                multisets.rng:96:  subterm*
scalarproduct           multisets.rng:86:  subterm*
subtract                multisets.rng:57:  subterm*

bool                    booleans.rng:56:   empty
booleanconstant         booleans.rng:143:  value, subterm*
and                     booleans.rng:87:   subterm*
or                      booleans.rng:96:   subterm*
not                     booleans.rng:105:  subterm*
imply                   booleans.rng:114:  subterm*
equality                booleans.rng:124:  subterm*
inequality              booleans.rng:134:  subterm*

cyclicenumeration       cyclicenumerations.rng:39: feconstant*
predecessor             cyclicenumerations.rng:76: subterm*
successor               cyclicenumerations.rng:67: subterm*

finiteenumeration       finiteenumerations.rng:50: feconstant*
feconstant              finiteenumerations.rng:59: ID, name

finiteintrange          finiteintranges.rng:46:	  start, stop
finiteintrangeconstant  finiteintranges.rng:118:  value, finiteintrange, subterm*
greaterthan             finiteintranges.rng:99:   subterm*
greaterthanorequal      finiteintranges.rng:108   subterm*
lessthan                finiteintranges.rng:81:   subterm*
lessthanorequal         finiteintranges.rng:90:   subterm*

-----------------------------------------------------

integer                 integers.rng:57:  empty
natural                 integers.rng:66:  empty
positive                integers.rng:75:  empty
numberconstant          integers.rng:113: value, subterm*, Number Sort
addition                integers.rng:164: subterm*
div                     integers.rng:191: subterm*
geq                     integers.rng:155: subterm*
gt                      integers.rng:146: subterm*
leq                     integers.rng:137: subterm*
lt                      integers.rng:128: subterm*
mod                     integers.rng:200: subterm*
mult                    integers.rng:182: subterm*
subtraction             integers.rng:173: subterm*

string::Sort            strings.rng:46:  empty
stringconstant          strings.rng:65:  value, subterm*
value                   strings.rng:55:  text
stringappend            strings.rng:156: subterm*
stringconcatenation     strings.rng:138: subterm*
stringlength            strings.rng:147: subterm*
geqs                    strings.rng:129: subterm*
gts                     strings.rng:120: subterm*
leqs                    strings.rng:111: subterm*
lts                     strings.rng:102: subterm*
substring               strings.rng:166: start, length, subterm*

arbitraryoperator       arbitrarydeclarations.rng:59: ID, name, output sort ref, input sort ref*
arbitrarysort           arbitrarydeclarations.rng:49: ID, name
input                   arbitrarydeclarations.rng:63: Sort
output                  arbitrarydeclarations.rng:67: Sort
unparsed                arbitrarydeclarations.rng:79: ID, name, anyElement*

list                    lists.rng:41:  Sort
emptylist               lists.rng:80:  Sort, subterm*
listappend              lists.rng:122: subterm*
listconcatenation       lists.rng:113: subterm*
listlength              lists.rng:92:  subterm*
makelist                lists.rng:101: Sort, subterm*
memberatindex           lists.rng:131: index, subterm*
sublist                 lists.rng:144: start, length,  subterm*

partition               partitions.rng:50:  ID, name, Sort, partitionelement+
partitionelement        partitions.rng:67:  ID, name, Term+
gtp                     partitions.rng:107: subterm*
ltp                     partitions.rng:98:  refPartition, subterm*
partitionelementof      partitions.rng:116: subterm*

-----------------------------------------------------
anyName                 relaxng.rng:234:
attribute               relaxng.rng:21:
choice                  relaxng.rng:242:
choice                  relaxng.rng:44:
data                    relaxng.rng:99:
define                  relaxng.rng:191:
div                     relaxng.rng:150:
div                     relaxng.rng:173:
element                 relaxng.rng:11:
empty                   relaxng.rng:82:
except                  relaxng.rng:117:
except                  relaxng.rng:253:
externalRef             relaxng.rng:129:
grammar                 relaxng.rng:136:
group                   relaxng.rng:36:
include                 relaxng.rng:154:
interleave              relaxng.rng:40:
list                    relaxng.rng:60:
mixed                   relaxng.rng:64:
name                    relaxng.rng:230:
notAllowed              relaxng.rng:125:
nsName                  relaxng.rng:238:
oneOrMore               relaxng.rng:56:
optional                relaxng.rng:48:
param                   relaxng.rng:108:
parentRef               relaxng.rng:75:
start                   relaxng.rng:183:
text                    relaxng.rng:86:
value                   relaxng.rng:90:
zeroOrMore              relaxng.rng:52:
ref                     relaxng.rng:68:
